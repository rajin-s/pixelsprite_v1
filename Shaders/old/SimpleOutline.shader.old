Shader "PixelSprite/Simple Outline"
{
	Properties
	{
		_MainTex ("Texture", 2D) = "white" {}
		_Weight ("Weight", Float) = 1
		_Color ("Outline Color", Color) = (0,0,0,1)
	}
	SubShader
	{
		Tags
		{
			"RenderType"="Transparent"
			"DisableBatching"="True"
		}

		Cull Off
		ZWrite Off
		Blend SrcAlpha OneMinusSrcAlpha

		Pass
		{
			CGPROGRAM
			#pragma vertex vert
			#pragma fragment frag
			
			#include "PS_Common.cginc"

			struct appdata
			{
				float4 vertex : POSITION;
				float2 uv : TEXCOORD0;
				float4 color : COLOR;
			};

			struct v2f
			{
				float2 uv : TEXCOORD0;
				float4 vertex : SV_POSITION;
				float4 color : COLOR;
			};

			sampler2D _MainTex;
			float4 _MainTex_ST;
			
			v2f vert (appdata IN)
			{
				v2f OUT;
				OUT.vertex = UnityObjectToClipPos(IN.vertex);
				OUT.uv = IN.uv;
				OUT.color = IN.color;
				return OUT;
			}
			
			float4 _MainTex_TexelSize;
			float _Weight;
			fixed4 _Color;

			fixed4 frag (v2f IN) : SV_Target
			{
				fixed4 col = tex2D(_MainTex, IN.uv);
				col = col * IN.color;
				col *= col.a;
				fixed4 outline = fixed4(_Color.rgb, Outline(IN.uv, _MainTex, _MainTex_TexelSize.xy * _Weight, _Weight));
				col += outline * outline.a;
				return col;
			}
			ENDCG
		}
	}
}
